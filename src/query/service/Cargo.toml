[package]
name = "databend-query"
description = "A real-time Cloud Distributed Query Engine"
version = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
edition = { workspace = true }

[lib]
doctest = false
test = false

[features]
default = ["simd", "z3-prove"]
simd = ["databend-common-arrow/simd"]

z3-prove = ["databend-common-sql/z3-prove"]
disable_initial_exec_tls = ["databend-common-base/disable_initial_exec_tls"]

tokio-console = ["databend-common-tracing/console", "databend-common-base/tracing"]
memory-profiling = ["databend-common-base/memory-profiling", "databend-common-http/memory-profiling"]
storage-hdfs = ["opendal/services-hdfs", "databend-common-storage/storage-hdfs"]
io-uring = [
    # "databend-common-meta-embedded/io-uring",
    "databend-common-meta-store/io-uring",
    # "databend-common-meta-sled-store/io-uring",
    # "databend-common-meta-raft-store/io-uring",
]

[dependencies]
# Workspace dependencies
databend-common-arrow = { path = "../../common/arrow" }
databend-common-ast = { path = "../ast" }
databend-common-base = { path = "../../common/base" }
databend-common-cache = { path = "../../common/cache" }
databend-common-catalog = { path = "../catalog" }
databend-common-compress = { path = "../../common/compress" }
databend-common-config = { path = "../config" }
databend-common-exception = { path = "../../common/exception" }
databend-common-expression = { path = "../expression" }
databend-common-formats = { path = "../formats" }
databend-common-functions = { path = "../functions" }
databend-common-grpc = { path = "../../common/grpc" }
databend-common-hashtable = { path = "../../common/hashtable" }
databend-common-http = { path = "../../common/http" }
databend-common-io = { path = "../../common/io" }
databend-common-management = { path = "../management" }
databend-common-meta-api = { path = "../../meta/api" }
databend-common-meta-app = { path = "../../meta/app" }

databend-common-cloud-control = { path = "../../common/cloud_control" }
databend-common-license = { path = "../../common/license" }
databend-common-meta-embedded = { path = "../../meta/embedded" }
databend-common-meta-kvapi = { path = "../../meta/kvapi" }
databend-common-meta-store = { path = "../../meta/store" }
databend-common-meta-types = { path = "../../meta/types" }
databend-common-metrics = { path = "../../common/metrics" }
databend-common-openai = { path = "../../common/openai" }
databend-common-pipeline-core = { path = "../pipeline/core" }
databend-common-pipeline-sinks = { path = "../pipeline/sinks" }
databend-common-pipeline-sources = { path = "../pipeline/sources" }
databend-common-pipeline-transforms = { path = "../pipeline/transforms" }
databend-common-settings = { path = "../settings" }
databend-common-sharing = { path = "../sharing" }
databend-common-sql = { path = "../sql" }
databend-common-storage = { path = "../../common/storage" }
databend-common-storages-delta = { path = "../storages/delta" }
databend-common-storages-factory = { path = "../storages/factory" }
databend-common-storages-fuse = { path = "../storages/fuse" }
databend-common-storages-hive = { path = "../storages/hive/hive" }
databend-common-storages-iceberg = { path = "../storages/iceberg" }
databend-common-storages-information-schema = { path = "../storages/information_schema" }
databend-common-storages-null = { path = "../storages/null" }
databend-common-storages-parquet = { path = "../storages/parquet" }
databend-common-storages-result-cache = { path = "../storages/result_cache" }
databend-common-storages-share = { path = "../storages/share" }
databend-common-storages-stage = { path = "../storages/stage" }
databend-common-storages-stream = { path = "../storages/stream" }
databend-common-storages-system = { path = "../storages/system" }
databend-common-storages-view = { path = "../storages/view" }
databend-common-tracing = { path = "../../common/tracing" }
databend-common-users = { path = "../users" }
databend-enterprise-aggregating-index = { path = "../ee_features/aggregating_index" }
databend-enterprise-background-service = { path = "../ee_features/background_service" }
databend-enterprise-data-mask-feature = { path = "../ee_features/data_mask" }
databend-enterprise-stream-handler = { path = "../ee_features/stream_handler" }
databend-enterprise-vacuum-handler = { path = "../ee_features/vacuum_handler" }
databend-enterprise-virtual-column = { path = "../ee_features/virtual_column" }
databend-storages-common-blocks = { path = "../storages/common/blocks" }
databend-storages-common-cache = { path = "../storages/common/cache" }
databend-storages-common-cache-manager = { path = "../storages/common/cache_manager" }
databend-storages-common-index = { path = "../storages/common/index" }
databend-storages-common-table-meta = { path = "../storages/common/table_meta" }
jsonb = { workspace = true }

# GitHub dependencies

# Crates.io dependencies
arrow-array = { workspace = true }
arrow-flight = { workspace = true }
arrow-ipc = { workspace = true }
arrow-schema = { workspace = true }
async-backtrace = { workspace = true }
async-channel = "1.7.1"
async-stream = "0.3.3"
async-trait = { workspace = true }
backoff = { version = "0.4.0", features = ["futures", "tokio"] }
base64 = "0.21.0"
bumpalo = { workspace = true }
byte-unit = "4.0.19"
byteorder = { workspace = true }
chrono = { workspace = true }
chrono-tz = { workspace = true }
config = { version = "0.13.4", features = [] }
ctor = "0.1.26"
dashmap = { workspace = true }
ethnum = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
h2 = "0.3.17"
headers = "0.3.8"
highway = "1.1"
http = "0.2.8"
humantime = "2.1.0"
indicatif = "0.17.5"
itertools = { workspace = true }
jwt-simple = "0.11.0"
log = { workspace = true }
lz4 = "1.24.0"
match-template = { workspace = true }
metrics = "0.20.1"
minitrace = { workspace = true }
naive-cityhash = "0.2.0"
once_cell = { workspace = true }
opendal = { workspace = true }
opensrv-mysql = { version = "0.5.0", features = ["tls"] }
parking_lot = { workspace = true }
parquet = { workspace = true }
paste = "1.0.9"
petgraph = "0.6.2"
pin-project-lite = "0.2.9"
poem = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true }
rustls = "0.21.6"
rustls-pemfile = "1.0.2"
rustyline = "11.0.0"
serde = { workspace = true }
serde_json = { workspace = true }
serde_urlencoded = "0.7.1"
socket2 = "0.5.3"
strength_reduce = "0.2.4"
sysinfo = "0.30"
tempfile = "3.4.0"
time = "0.3.14"
tokio = { workspace = true }
tokio-stream = { workspace = true, features = ["net"] }
toml = { version = "0.7.3", default-features = false }
tonic = { workspace = true }
typetag = { workspace = true }
unicode-segmentation = "1.10.1"
uuid = { workspace = true }
walkdir = { workspace = true }
xorf = { version = "0.11.0", default-features = false, features = ["binary-fuse"] }

[dev-dependencies]
arrow-cast = { workspace = true }
ordered-float = { workspace = true }

base64 = "0.21.0"
criterion = "0.4"
goldenfile = "1.4"
hex = "0.4.3"
jwt-simple = "0.11.0"
maplit = "1.0.2"
mysql_async = { workspace = true }
num = "0.4.0"
p256 = "0.13"
pretty_assertions = "1.3.0"
reqwest = { workspace = true }
rmp-serde = "1.1.1"
temp-env = "0.3.0"
tempfile = "3.4.0"
tower = "0.4.13"
url = "2.3.1"
wiremock = "0.5.14"

[build-dependencies]
databend-common-building = { path = "../../common/building" }

[package.metadata.cargo-machete]
ignored = ["match-template"]
