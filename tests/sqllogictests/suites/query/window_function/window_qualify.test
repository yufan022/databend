statement ok
CREATE DATABASE IF NOT EXISTS test_window_qualify

statement ok
USE test_window_qualify

statement ok
DROP TABLE IF EXISTS qt

statement ok
CREATE TABLE qt (i INTEGER, p CHAR(1), o INTEGER)

statement ok
INSERT INTO qt (i, p, o) VALUES (1, 'A', 1), (2, 'A', 2), (3, 'B', 1), (4, 'B', 2)

# window function in qualify clause
query ITI rowsort
SELECT i, p, o FROM qt QUALIFY ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) = 1;
----
1 A 1
3 B 1

# named window, other same as above
query ITI rowsort
SELECT i, p, o FROM qt WINDOW w AS (PARTITION BY p ORDER BY o) QUALIFY ROW_NUMBER() OVER w = 1
----
1 A 1
3 B 1

# window function in select list
query ITII rowsort
SELECT i, p, o, ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) AS rn FROM qt QUALIFY rn = 1
----
1 A 1 1
3 B 1 1

# named window, other same as above
query ITII rowsort
SELECT i, p, o, ROW_NUMBER() OVER w AS rn FROM qt WINDOW w AS (PARTITION BY p ORDER BY o) QUALIFY rn = 1
----
1 A 1 1
3 B 1 1

# qualify with subquery
query ITII rowsort
SELECT i, p, o, ROW_NUMBER() OVER w AS rn FROM qt WINDOW w AS (PARTITION BY p ORDER BY o) QUALIFY rn = (SELECT i FROM qt LIMIT 1)
----
1 A 1 1
3 B 1 1

# without qualify
query ITII rowsort
SELECT i, p, o, ROW_NUMBER() OVER (PARTITION BY p ORDER BY o) AS row_num FROM qt
----
1 A 1 1
2 A 2 2
3 B 1 1
4 B 2 2

statement ok
USE default

statement ok
DROP DATABASE test_window_qualify