statement ok
create table if not exists t1(a int, b int);

query T
explain select a from (select * from t1 order by a) as t2 where a > 1;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t2.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read bytes: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

query T
explain select a from (select * from t1) where a > 1 order by a;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t1.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read bytes: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

query T
explain select a from (select * from t1) as t2 where t2.a > 1 order by a;
----
Sort
├── output columns: [t1.a (#0)]
├── sort keys: [a ASC NULLS LAST]
├── estimated rows: 0.00
└── Filter
    ├── output columns: [t1.a (#0)]
    ├── filters: [is_true(t1.a (#0) > 1)]
    ├── estimated rows: 0.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [a (#0)]
        ├── read rows: 0
        ├── read bytes: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [is_true(t1.a (#0) > 1)], limit: NONE]
        └── estimated rows: 0.00

statement ok
set max_threads = 4;


# Sort without pre-projection
query T
explain pipeline select a, b from t1 order by a;
----
CompoundBlockOperator(Project) × 1 processor
  Merge (TransformSortMerge × 4 processors) to (CompoundBlockOperator(Project) × 1)
    TransformSortMerge × 4 processors
      SortPartialTransform × 4 processors
        Merge (DeserializeDataTransform × 1 processor) to (SortPartialTransform × 4)
          DeserializeDataTransform × 1 processor
            SyncReadParquetDataSource × 1 processor


# Sort with pre-projection
query T
explain pipeline select a + 1, b from t1 order by a + 1;
----
CompoundBlockOperator(Project) × 1 processor
  Merge (TransformSortMerge × 4 processors) to (CompoundBlockOperator(Project) × 1)
    TransformSortMerge × 4 processors
      SortPartialTransform × 4 processors
        Merge (CompoundBlockOperator(Map) × 1 processor) to (SortPartialTransform × 4)
          CompoundBlockOperator(Map) × 1 processor
            DeserializeDataTransform × 1 processor
              SyncReadParquetDataSource × 1 processor


statement ok
drop table if exists t1;
