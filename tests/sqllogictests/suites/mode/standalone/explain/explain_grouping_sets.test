query T
explain select number % 2 as a, number % 3 as b, number % 5 as c from numbers(1) group by rollup(a, b, c);
----
EvalScalar
├── output columns: [a (#8), b (#9), c (#10)]
├── expressions: [group_item (#1), group_item (#2), group_item (#3)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#7)]
    ├── group by: [a, b, c, _grouping_id]
    ├── aggregate functions: []
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── group by: [a, b, c, _grouping_id]
        ├── aggregate functions: []
        ├── estimated rows: 1.00
        └── AggregateExpand
            ├── output columns: [a (#1), b (#2), c (#3), _dup_group_item_0 (#4), _dup_group_item_1 (#5), _dup_group_item_2 (#6), _grouping_id (#7)]
            ├── grouping sets: [(a, b, c), (a, b), (a), ()]
            ├── estimated rows: 1.00
            └── EvalScalar
                ├── output columns: [a (#1), b (#2), c (#3)]
                ├── expressions: [numbers.number (#0) % 2, numbers.number (#0) % 3, numbers.number (#0) % 5]
                ├── estimated rows: 1.00
                └── TableScan
                    ├── table: default.system.numbers
                    ├── output columns: [number (#0)]
                    ├── read rows: 1
                    ├── read bytes: 8
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00

query T
explain select number % 2 as a, number % 3 as b, number % 5 as c from numbers(1) group by cube(a, b, c);
----
EvalScalar
├── output columns: [a (#8), b (#9), c (#10)]
├── expressions: [group_item (#1), group_item (#2), group_item (#3)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── output columns: [a (#1), b (#2), c (#3), _grouping_id (#7)]
    ├── group by: [a, b, c, _grouping_id]
    ├── aggregate functions: []
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── group by: [a, b, c, _grouping_id]
        ├── aggregate functions: []
        ├── estimated rows: 1.00
        └── AggregateExpand
            ├── output columns: [a (#1), b (#2), c (#3), _dup_group_item_0 (#4), _dup_group_item_1 (#5), _dup_group_item_2 (#6), _grouping_id (#7)]
            ├── grouping sets: [(), (a), (b), (c), (a, b), (a, c), (b, c), (a, b, c)]
            ├── estimated rows: 1.00
            └── EvalScalar
                ├── output columns: [a (#1), b (#2), c (#3)]
                ├── expressions: [numbers.number (#0) % 2, numbers.number (#0) % 3, numbers.number (#0) % 5]
                ├── estimated rows: 1.00
                └── TableScan
                    ├── table: default.system.numbers
                    ├── output columns: [number (#0)]
                    ├── read rows: 1
                    ├── read bytes: 8
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00
