statement ok
set enable_experimental_merge_into = 1;

statement ok
set enable_distributed_merge_into = 1;

statement ok
create table t1(a int);

statement ok
create table t2(a int);

statement ok
insert into t1 values(1),(2),(3),(4),(5);

statement ok
insert into t1 values(6),(7),(8),(9),(10);

statement ok
insert into t1 values(11),(12),(13),(14),(15);

statement ok
insert into t2 values(8);

query t
select * from t1 order by a;
----
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

query T
select * from t2 order by a;
----
8

## check there is no add row_number.
query T
explain merge into t1 using t2 on t1.a < t2.a when matched then update * when not matched then insert *;
----
MergeInto:
target_table: default.default.t1
├── distributed: false
├── target_build_optimization: false
├── matched update: [condition: None,update set a = a (#0)]
├── unmatched insert: [condition: None,insert into (a) values(CAST(a (#0) AS Int32 NULL))]
└── HashJoin: RIGHT OUTER
    ├── equi conditions: []
    ├── non-equi conditions: [lt(t1.a (#1), t2.a (#0))]
    ├── Exchange(Merge)
    │   └── LogicalGet
    │       ├── table: default.default.t1
    │       ├── filters: []
    │       ├── order by: []
    │       └── limit: NONE
    └── Exchange(Merge)
        └── LogicalGet
            ├── table: default.default.t2
            ├── filters: []
            ├── order by: []
            └── limit: NONE

query TT
merge into t1 using t2 on t1.a < t2.a when matched then update * when not matched then insert *;
----
0 7

query T
select * from t1 order by a;
----
8
8
8
8
8
8
8
8
9
10
11
12
13
14
15

statement ok
set enable_experimental_merge_into = 0;

statement ok
set enable_distributed_merge_into = 0;